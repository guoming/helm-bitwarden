kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ .Values.app }}
  annotations:
    kubesphere.io/creator: admin
data:
  nginx-default.conf: |-
    upstream backend_bitwarden {
        server localhost:80;
    }

    # server {

    #     listen       8443 ssl;
    #     server_name _;

    #     ssl_certificate      cert/localhost.pem;
    #     ssl_certificate_key  cert/localhost.key;

    #     ssl_session_cache    shared:SSL:1m;
    #     ssl_session_timeout  5m;

    #     ssl_ciphers  HIGH:!aNULL:!MD5;
    #     ssl_prefer_server_ciphers  on;

    #     location = /identity/accounts/prelogin {
    #       rewrite ^/identity/accounts/prelogin$ /api/accounts/prelogin;
    #       proxy_pass http://backend_bitwarden/;
    #     }
        
    #     location / {
    #         proxy_pass http://backend_bitwarden;
    #     }
    # }

    server {

        listen       8080;
        server_name _;

        location = /identity/accounts/prelogin {
          rewrite ^/identity/accounts/prelogin$ /api/accounts/prelogin;
          proxy_pass http://backend_bitwarden/;
        }
        
        location / {
            proxy_pass http://backend_bitwarden;
        }

    }

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.app }}
  labels:
    app.kubernetes.io/name: {{ .Values.app }}
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubesphere.io/creator: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: {{ .Values.app }}
    spec:
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
            type: ""
        - name: "conf"
          configMap:
            name: {{ .Values.app }}
        - name: "data"
          persistentVolumeClaim:
            claimName: {{ .Values.app }}
      containers:
        - name: nginx
          image: nginx
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: '0.2'
              memory: 500Mi
            requests:
              cpu: '0.1'
              memory: 100Mi
          volumeMounts:
            - name: localtime
              mountPath: /etc/localtime
            - name: conf
              subPath: nginx-default.conf
              mountPath: /etc/nginx/conf.d/default.conf
          ports:
            - name: tcp-8080
              containerPort: 8080
              protocol: TCP
            - name: tcp-8443
              containerPort: 8443
              protocol: TCP
        - name: bitwarden-server
          image: vaultwarden/server:latest
          ports:
            - name: tcp-80
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data/
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Values.app }}
  labels:
    app.kubernetes.io/name: {{ .Values.app }}
  annotations:
    kubesphere.io/alias-name: {{ .Values.app }}
    kubesphere.io/creator: admin
    kubesphere.io/serviceType: statefulservice
spec:
  ports:
    - name: tcp-80
      protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app.kubernetes.io/name: {{ .Values.app }}
  type: ClusterIP
  sessionAffinity: None